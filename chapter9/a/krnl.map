
分配公共符号
公共符号            大小              文件

idt_ptr             0x6               kernel/global.o
task_stack          0x38000           kernel/global.o
k_reenter           0x4               kernel/global.o
gdt                 0x400             kernel/global.o
tty_table           0xc30             kernel/global.o
tss                 0x68              kernel/global.o
nr_current_console  0x4               kernel/global.o
disp_pos            0x4               kernel/global.o
gdt_ptr             0x6               kernel/global.o
idt                 0x800             kernel/global.o
PARTITION_ENTRY     0x10              kernel/hd.o
ticks               0x4               kernel/global.o
console_table       0x30              kernel/global.o
irq_table           0x40              kernel/global.o
p_proc_ready        0x4               kernel/global.o
proc_table          0x428             kernel/global.o

舍弃的输入节

 .note.GNU-stack
                0x0000000000000000        0x0 kernel/start.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/keyboard.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/tty.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/console.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/printf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/vsprintf.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/main.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/proc.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/systask.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/hd.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/clock.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/i8259.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/global.o
 .note.GNU-stack
                0x0000000000000000        0x0 kernel/protect.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/klib.o
 .note.GNU-stack
                0x0000000000000000        0x0 lib/misc.o
 .note.GNU-stack
                0x0000000000000000        0x0 fs/main.o

内存配置

名称           来源             长度             属性
*default*        0x0000000000000000 0xffffffffffffffff

链结器命令稿和内存映射

段 .text 的地址设置为 0x30400
LOAD kernel/kernel.o
LOAD kernel/start.o
LOAD kernel/keyboard.o
LOAD kernel/tty.o
LOAD kernel/console.o
LOAD kernel/printf.o
LOAD kernel/vsprintf.o
LOAD kernel/main.o
LOAD kernel/proc.o
LOAD kernel/systask.o
LOAD kernel/hd.o
LOAD kernel/clock.o
LOAD kernel/i8259.o
LOAD kernel/global.o
LOAD kernel/protect.o
LOAD kernel/syscall.o
LOAD lib/klib.o
LOAD lib/kliba.o
LOAD lib/string.o
LOAD lib/misc.o
LOAD fs/main.o
                [!provide]                        PROVIDE (__executable_start, 0x8048000)
                0x0000000008048094                . = (0x8048000 + SIZEOF_HEADERS)

.interp
 *(.interp)

.note.gnu.build-id
 *(.note.gnu.build-id)

.hash
 *(.hash)

.gnu.hash
 *(.gnu.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.dyn        0x0000000008048094        0x0
 *(.rel.init)
 *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*)
 .rel.text      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.fini)
 *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*)
 *(.rel.data.rel.ro .rel.data.rel.ro.* .rel.gnu.linkonce.d.rel.ro.*)
 *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*)
 .rel.data      0x0000000008048094        0x0 kernel/kernel.o
 *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*)
 *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*)
 *(.rel.ctors)
 *(.rel.dtors)
 *(.rel.got)
 *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*)
 *(.rel.ifunc)

.rel.plt        0x0000000008048094        0x0
 *(.rel.plt)
                [!provide]                        PROVIDE (__rel_iplt_start, .)
 *(.rel.iplt)
 .rel.iplt      0x0000000008048094        0x0 kernel/kernel.o
                [!provide]                        PROVIDE (__rel_iplt_end, .)

.init
 *(SORT(.init))

.plt            0x00000000080480a0        0x0
 *(.plt)
 *(.iplt)
 .iplt          0x00000000080480a0        0x0 kernel/kernel.o

.plt.got
 *(.plt.got)

.text           0x0000000000030400     0x43ef
 *(.text.unlikely .text.*_unlikely .text.unlikely.*)
 *(.text.exit .text.exit.*)
 *(.text.startup .text.startup.*)
 *(.text.hot .text.hot.*)
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000030400      0x410 kernel/kernel.o
                0x0000000000030400                _start
                0x0000000000030440                hwint00
                0x0000000000030470                hwint01
                0x00000000000304a0                hwint02
                0x00000000000304d0                hwint03
                0x0000000000030500                hwint04
                0x0000000000030530                hwint05
                0x0000000000030560                hwint06
                0x0000000000030590                hwint07
                0x00000000000305c0                hwint08
                0x00000000000305f0                hwint09
                0x0000000000030620                hwint10
                0x0000000000030650                hwint11
                0x0000000000030680                hwint12
                0x00000000000306b0                hwint13
                0x00000000000306e0                hwint14
                0x0000000000030710                hwint15
                0x0000000000030734                divide_error
                0x000000000003073a                single_step_exception
                0x0000000000030740                nmi
                0x0000000000030746                breakpoint_exception
                0x000000000003074c                overflow
                0x0000000000030752                bounds_check
                0x0000000000030758                inval_opcode
                0x000000000003075e                copr_not_available
                0x0000000000030764                double_fault
                0x0000000000030768                copr_seg_overrun
                0x000000000003076e                inval_tss
                0x0000000000030772                segment_not_present
                0x0000000000030776                stack_exception
                0x000000000003077a                general_protection
                0x000000000003077e                page_fault
                0x0000000000030782                copr_error
                0x00000000000307cb                sys_call
                0x00000000000307eb                restart
 .text          0x0000000000030810       0x95 kernel/start.o
                0x0000000000030810                cstart
 .text          0x00000000000308a5      0x698 kernel/keyboard.o
                0x00000000000308a5                keyboard_handler
                0x0000000000030905                init_keyboard
                0x00000000000309aa                keyboard_read
 .text          0x0000000000030f3d      0x52f kernel/tty.o
                0x0000000000030f3d                task_tty
                0x0000000000030ff7                in_process
                0x0000000000031272                tty_write
                0x00000000000312b8                sys_printx
 .text          0x000000000003146c      0x48a kernel/console.o
                0x000000000003146c                init_screen
                0x0000000000031572                is_current_console
                0x000000000003158d                out_char
                0x0000000000031855                select_console
                0x000000000003188b                scroll_screen
 .text          0x00000000000318f6       0x50 kernel/printf.o
                0x00000000000318f6                printf
 .text          0x0000000000031946      0x303 kernel/vsprintf.o
                0x00000000000319a4                vsprintf
                0x0000000000031c23                sprintf
 .text          0x0000000000031c49      0x359 kernel/main.o
                0x0000000000031c49                kernel_main
                0x0000000000031ed0                get_ticks
                0x0000000000031f04                TestA
                0x0000000000031f09                TestB
                0x0000000000031f31                TestC
                0x0000000000031f59                panic
 .text          0x0000000000031fa2     0x174e kernel/proc.o
                0x0000000000031fa2                schedule
                0x000000000003202e                sys_sendrec
                0x000000000003214e                send_recv
                0x000000000003220b                ldt_seg_linear
                0x0000000000032255                va2la
                0x00000000000322b6                reset_msg
                0x00000000000330bf                inform_int
                0x000000000003323b                dump_proc
                0x00000000000335e3                dump_msg
 .text          0x00000000000336f0       0x58 kernel/systask.o
                0x00000000000336f0                task_sys
 .text          0x0000000000033748      0x4b8 kernel/hd.o
                0x0000000000033748                task_hd
                0x0000000000033bd5                hd_handler
 .text          0x0000000000033c00       0xd5 kernel/clock.o
                0x0000000000033c00                clock_handler
                0x0000000000033c43                milli_delay
                0x0000000000033c7d                init_clock
 .text          0x0000000000033cd5      0x130 kernel/i8259.o
                0x0000000000033cd5                init_8259A
                0x0000000000033daa                spurious_irq
                0x0000000000033de1                put_irq_handler
 .text          0x0000000000033e05        0x0 kernel/global.o
 .text          0x0000000000033e05      0x5f9 kernel/protect.o
                0x0000000000033e05                init_prot
                0x0000000000034214                seg2phys
                0x00000000000342d0                exception_handler
 *fill*         0x00000000000343fe        0x2 
 .text          0x0000000000034400       0x20 kernel/syscall.o
                0x0000000000034400                sendrec
                0x0000000000034414                printx
 .text          0x0000000000034420      0x119 lib/klib.o
                0x0000000000034420                itoa
                0x00000000000344cb                disp_int
                0x00000000000344f2                delay
 *fill*         0x0000000000034539        0x7 
 .text          0x0000000000034540      0x19a lib/kliba.o
                0x0000000000034540                disp_str
                0x000000000003457e                disp_color_str
                0x00000000000345bd                out_byte
                0x00000000000345c9                in_byte
                0x00000000000345d3                port_read
                0x00000000000345e6                port_write
                0x00000000000345f9                disable_irq
                0x000000000003462e                enable_irq
                0x000000000003464d                disable_int
                0x000000000003464f                enable_int
                0x0000000000034651                glitter
 *fill*         0x00000000000346da        0x6 
 .text          0x00000000000346e0       0x78 lib/string.o
                0x00000000000346e0                memcpy
                0x0000000000034709                memset
                0x000000000003472a                strcpy
                0x0000000000034742                strlen
 .text          0x0000000000034758       0x54 lib/misc.o
                0x0000000000034758                spin
                0x0000000000034773                assertion_failure
 .text          0x00000000000347ac       0x43 fs/main.o
                0x00000000000347ac                task_fs
 *(.gnu.warning)

.fini
 *(SORT(.fini))
                [!provide]                        PROVIDE (__etext, .)
                [!provide]                        PROVIDE (_etext, .)
                [!provide]                        PROVIDE (etext, .)

.rodata         0x0000000000034800      0xba5
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata        0x0000000000034800       0x43 kernel/start.o
 *fill*         0x0000000000034843        0x1 
 .rodata        0x0000000000034844       0x64 kernel/keyboard.o
 .rodata        0x00000000000348a8       0x94 kernel/tty.o
 .rodata        0x000000000003493c       0x34 kernel/main.o
 .rodata        0x0000000000034970      0x63e kernel/proc.o
 .rodata        0x0000000000034fae       0x11 kernel/systask.o
 *fill*         0x0000000000034fbf        0x1 
 .rodata        0x0000000000034fc0       0xbd kernel/hd.o
 .rodata        0x000000000003507d       0x11 kernel/i8259.o
 *fill*         0x000000000003508e        0x2 
 .rodata        0x0000000000035090        0x4 kernel/global.o
                0x0000000000035090                FSBUF_SIZE
 *fill*         0x0000000000035094        0xc 
 .rodata        0x00000000000350a0      0x290 kernel/protect.o
 .rodata        0x0000000000035330       0x61 lib/misc.o
 .rodata        0x0000000000035391       0x14 fs/main.o

.rodata1
 *(.rodata1)

.eh_frame_hdr
 *(.eh_frame_hdr)
 *(.eh_frame_entry .eh_frame_entry.*)

.eh_frame       0x00000000000353a8      0x960
 *(.eh_frame)
 .eh_frame      0x00000000000353a8       0x38 kernel/start.o
 .eh_frame      0x00000000000353e0       0xe0 kernel/keyboard.o
                                         0xf8 (松开之前的大小)
 .eh_frame      0x00000000000354c0       0xfc kernel/tty.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x00000000000355bc      0x100 kernel/console.o
                                        0x118 (松开之前的大小)
 .eh_frame      0x00000000000356bc       0x20 kernel/printf.o
                                         0x38 (松开之前的大小)
 .eh_frame      0x00000000000356dc       0x60 kernel/vsprintf.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x000000000003573c       0xb0 kernel/main.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x00000000000357ec      0x1d8 kernel/proc.o
                                        0x1f0 (松开之前的大小)
 .eh_frame      0x00000000000359c4       0x1c kernel/systask.o
                                         0x34 (松开之前的大小)
 .eh_frame      0x00000000000359e0       0xfc kernel/hd.o
                                        0x114 (松开之前的大小)
 .eh_frame      0x0000000000035adc       0x60 kernel/clock.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000035b3c       0x60 kernel/i8259.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000035b9c       0xb0 kernel/protect.o
                                         0xc8 (松开之前的大小)
 .eh_frame      0x0000000000035c4c       0x60 lib/klib.o
                                         0x78 (松开之前的大小)
 .eh_frame      0x0000000000035cac       0x3c lib/misc.o
                                         0x54 (松开之前的大小)
 .eh_frame      0x0000000000035ce8       0x20 fs/main.o
                                         0x38 (松开之前的大小)
 *(.eh_frame.*)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.gnu_extab
 *(.gnu_extab*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)
                0x0000000000036d08                . = DATA_SEGMENT_ALIGN (0x1000, 0x1000)

.eh_frame
 *(.eh_frame)
 *(.eh_frame.*)

.gnu_extab
 *(.gnu_extab)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)

.exception_ranges
 *(.exception_ranges .exception_ranges*)

.tdata
 *(.tdata .tdata.* .gnu.linkonce.td.*)

.tbss
 *(.tbss .tbss.* .gnu.linkonce.tb.*)
 *(.tcommon)

.preinit_array  0x0000000000036d08        0x0
                [!provide]                        PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                [!provide]                        PROVIDE (__preinit_array_end, .)

.init_array     0x0000000000036d08        0x0
                [!provide]                        PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*) SORT(.ctors.*))
 *(.init_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .ctors)
                [!provide]                        PROVIDE (__init_array_end, .)

.fini_array     0x0000000000036d08        0x0
                [!provide]                        PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*) SORT(.dtors.*))
 *(.fini_array EXCLUDE_FILE(*crtend?.o *crtend.o *crtbegin?.o *crtbegin.o) .dtors)
                [!provide]                        PROVIDE (__fini_array_end, .)

.ctors
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)

.dtors
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)

.jcr
 *(.jcr)

.data.rel.ro
 *(.data.rel.ro.local* .gnu.linkonce.d.rel.ro.local.*)
 *(.data.rel.ro .data.rel.ro.* .gnu.linkonce.d.rel.ro.*)

.dynamic
 *(.dynamic)

.got
 *(.got)
 *(.igot)
                0x0000000000036d08                . = DATA_SEGMENT_RELRO_END (., (SIZEOF (.got.plt) >= 0xc)?0xc:0x0)

.got.plt        0x0000000000036d08        0x0
 *(.got.plt)
 *(.igot.plt)
 .igot.plt      0x0000000000036d08        0x0 kernel/kernel.o

.data           0x0000000000036d20      0x760
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000036d20        0x2 kernel/kernel.o
 .data          0x0000000000036d22        0x0 kernel/start.o
 *fill*         0x0000000000036d22       0x1e 
 .data          0x0000000000036d40      0x600 kernel/keyboard.o
                0x0000000000036d40                keymap
 .data          0x0000000000037340        0x0 kernel/tty.o
 .data          0x0000000000037340        0x0 kernel/console.o
 .data          0x0000000000037340        0x0 kernel/printf.o
 .data          0x0000000000037340        0x0 kernel/vsprintf.o
 .data          0x0000000000037340        0x0 kernel/main.o
 .data          0x0000000000037340        0x0 kernel/proc.o
 .data          0x0000000000037340        0x0 kernel/systask.o
 .data          0x0000000000037340        0x0 kernel/hd.o
 .data          0x0000000000037340        0x0 kernel/clock.o
 .data          0x0000000000037340        0x0 kernel/i8259.o
 .data          0x0000000000037340      0x140 kernel/global.o
                0x0000000000037340                task_table
                0x00000000000373e0                user_proc_table
                0x0000000000037458                sys_call_table
                0x0000000000037464                dd_map
                0x000000000003747c                fsbuf
 .data          0x0000000000037480        0x0 kernel/protect.o
 .data          0x0000000000037480        0x0 lib/klib.o
 .data          0x0000000000037480        0x0 lib/misc.o
 .data          0x0000000000037480        0x0 fs/main.o

.data1
 *(.data1)
                0x0000000000037480                _edata = .
                [!provide]                        PROVIDE (edata, .)
                0x0000000000037480                . = .
                0x0000000000037480                __bss_start = .

.bss            0x0000000000037480    0x3aa88
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000037480      0x800 kernel/kernel.o
 .bss           0x0000000000037c80        0x0 kernel/start.o
 .bss           0x0000000000037c80       0x58 kernel/keyboard.o
 .bss           0x0000000000037cd8        0x0 kernel/tty.o
 .bss           0x0000000000037cd8        0x0 kernel/console.o
 .bss           0x0000000000037cd8        0x0 kernel/printf.o
 .bss           0x0000000000037cd8        0x0 kernel/vsprintf.o
 .bss           0x0000000000037cd8        0x0 kernel/main.o
 .bss           0x0000000000037cd8        0x0 kernel/proc.o
 .bss           0x0000000000037cd8        0x0 kernel/systask.o
 *fill*         0x0000000000037cd8        0x8 
 .bss           0x0000000000037ce0      0x420 kernel/hd.o
 .bss           0x0000000000038100        0x0 kernel/clock.o
 .bss           0x0000000000038100        0x0 kernel/i8259.o
 .bss           0x0000000000038100        0x0 kernel/global.o
 .bss           0x0000000000038100        0x0 kernel/protect.o
 .bss           0x0000000000038100        0x0 lib/klib.o
 .bss           0x0000000000038100        0x0 lib/misc.o
 .bss           0x0000000000038100        0x0 fs/main.o
 *(COMMON)
 COMMON         0x0000000000038100       0x10 kernel/hd.o
                0x0000000000038100                PARTITION_ENTRY
 *fill*         0x0000000000038110       0x10 
 COMMON         0x0000000000038120    0x39de8 kernel/global.o
                0x0000000000038120                idt_ptr
                0x0000000000038140                task_stack
                0x0000000000070140                k_reenter
                0x0000000000070160                gdt
                0x0000000000070560                tty_table
                0x00000000000711a0                tss
                0x0000000000071208                nr_current_console
                0x000000000007120c                disp_pos
                0x0000000000071210                gdt_ptr
                0x0000000000071220                idt
                0x0000000000071a20                ticks
                0x0000000000071a40                console_table
                0x0000000000071a80                irq_table
                0x0000000000071ac0                p_proc_ready
                0x0000000000071ae0                proc_table
                0x0000000000071f08                . = ALIGN ((. != 0x0)?0x4:0x1)
                0x0000000000071f08                . = ALIGN (0x4)
                0x0000000000071f08                . = SEGMENT_START ("ldata-segment", .)
                0x0000000000071f08                . = ALIGN (0x4)
                0x0000000000071f08                _end = .
                [!provide]                        PROVIDE (end, .)
                0x0000000000071f08                . = DATA_SEGMENT_END (.)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x35
 *(.comment)
 .comment       0x0000000000000000       0x35 kernel/start.o
                                         0x36 (松开之前的大小)
 .comment       0x0000000000000035       0x36 kernel/keyboard.o
 .comment       0x0000000000000035       0x36 kernel/tty.o
 .comment       0x0000000000000035       0x36 kernel/console.o
 .comment       0x0000000000000035       0x36 kernel/printf.o
 .comment       0x0000000000000035       0x36 kernel/vsprintf.o
 .comment       0x0000000000000035       0x36 kernel/main.o
 .comment       0x0000000000000035       0x36 kernel/proc.o
 .comment       0x0000000000000035       0x36 kernel/systask.o
 .comment       0x0000000000000035       0x36 kernel/hd.o
 .comment       0x0000000000000035       0x36 kernel/clock.o
 .comment       0x0000000000000035       0x36 kernel/i8259.o
 .comment       0x0000000000000035       0x36 kernel/global.o
 .comment       0x0000000000000035       0x36 kernel/protect.o
 .comment       0x0000000000000035       0x36 lib/klib.o
 .comment       0x0000000000000035       0x36 lib/misc.o
 .comment       0x0000000000000035       0x36 fs/main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.gnu.attributes
 *(.gnu.attributes)

/DISCARD/
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
OUTPUT(kernel.bin elf32-i386)
